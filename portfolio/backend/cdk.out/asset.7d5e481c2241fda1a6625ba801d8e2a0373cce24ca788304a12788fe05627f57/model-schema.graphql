input AMPLIFY {
 engine: String = "mysql"  
}


type Appointment @refersTo(name: "Appointments") @model @auth(rules: [{ allow: public }]){
  appointmentid: String! @primaryKey
  doctorid: String! @index(name: "doctorid")
  patientid: String! @index(name: "patientid")
  app_datetime: AWSDateTime! 
  appointment_status: String 
  appointment_name: String 
  appointment_notes: String
  patient: Patient @belongsTo(references: ["patientid"])
}

type Diagnosis @model {
  diagnosisid: String! @primaryKey
  patientid: String @index(name: "patientid")
  doctorid: String @index(name: "doctorid")
  diagnosisDate: AWSDateTime @refersTo(name: "diagnosis_date")
  diagnosisTitle: String @refersTo(name: "diagnosis_title")
  diagnosisDetail: String @refersTo(name: "diagnosis_detail")
}

type Doctor @refersTo(name: "doctor") @model @auth(rules: [{ allow: public }]){
  doctorid: String! @primaryKey
  qualifications: String
  tags: String
  registeredHospitalId: String @index(name: "registeredHospitalId")
  patients: [Patient] @hasMany(references: ["registeredDoctorId"])
}

type Hospital @refersTo(name: "hospital") @model @auth(rules: [{ allow: public }]){
  hospitalid: String! @primaryKey
  location: String
  opendate: AWSDate
  tags: String
}

type Patient @refersTo(name: "patient") @model @auth(rules: [{ allow: public }]){
  patientid: String! @primaryKey
  registeredHospitalId: String @index(name: "registeredHospitalId")
  registeredDoctorId: String @index(name: "registeredDoctorId")
  address: String
  age: Int
  name: String
  appointments: [Appointment] @hasMany(references: ["patientid"])
  doctor: Doctor @belongsTo(references: ["registeredDoctorId"])
}



type Prescription @model @auth(rules: [{ allow: public }]){
  prescriptionid: String! @primaryKey
  patientid: String @index(name: "patientid")
  prescriptionText: AWSDateTime @refersTo(name: "prescription_text")
  diagnosisTitle: String @refersTo(name: "diagnosis_title")
  validUntil: AWSDate @refersTo(name: "valid_until")
}
